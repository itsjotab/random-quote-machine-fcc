{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst GetQuote = () => {\n  _s();\n\n  const [quote, setQuote] = useState(''); // const [author, setAuthors] = useState('')\n\n  fetch('https://goquotes-api.herokuapp.com/api/v1/all/quotes').then(res => res.json()).then(arr => {\n    arr.quotes.map(text => {\n      text.text.map(post => {\n        if (post.text > 0) {\n          return post.text;\n        }\n      });\n    });\n  });\n};\n\n_s(GetQuote, \"r0DtsAa0by/2plG0g0U2ZqLPVuQ=\");\n\n_c = GetQuote;\nexport default GetQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetQuote\");","map":{"version":3,"names":["useState","GetQuote","quote","setQuote","fetch","then","res","json","arr","quotes","map","text","post"],"sources":["/Users/itsjotab/Desktop/FCC-projects/random-quote-machine-fcc/src/components/quote.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nconst GetQuote = () => {\n    const [quote, setQuote] = useState('')\n    // const [author, setAuthors] = useState('')\n\n\n\n    fetch('https://goquotes-api.herokuapp.com/api/v1/all/quotes')\n        .then(res => res.json())\n        .then(arr => {\n            arr.quotes.map(text => {\n                text.text.map(post => {\n                    if(post.text > 0) {\n                        return post.text\n                    }\n                })\n            })\n        }\n        );\n}\nexport default GetQuote;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CADmB,CAEnB;;EAIAI,KAAK,CAAC,sDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,GAAG,IAAI;IACTA,GAAG,CAACC,MAAJ,CAAWC,GAAX,CAAeC,IAAI,IAAI;MACnBA,IAAI,CAACA,IAAL,CAAUD,GAAV,CAAcE,IAAI,IAAI;QAClB,IAAGA,IAAI,CAACD,IAAL,GAAY,CAAf,EAAkB;UACd,OAAOC,IAAI,CAACD,IAAZ;QACH;MACJ,CAJD;IAKH,CAND;EAOH,CAVL;AAYH,CAlBD;;GAAMV,Q;;KAAAA,Q;AAmBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}